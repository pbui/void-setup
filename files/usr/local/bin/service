#!/bin/sh

ACTION=$1
TARGET=$2
PROGNAME=$(basename $0)
SV_DIRS="/etc/sv=/var/service $HOME/.config/service=$HOME/.service"

usage () {
	cat << EOF
Usage: $PROGNAME COMMAND [TARGET]

Commands:
  list              Display all available services
  status  TARGET    Display status of TARGET service (all services if not specified)

  enable  TARGET    Enable TARGET service
  disable TARGET    Disable TARGET service

  start   TARGET    Start TARGET service
  restart TARGET    Restart TARGET service
  stop    TARGET    Stop TARGET service
EOF
	exit 1
}

case $ACTION in
enable)
	if [ -z "$TARGET" ]; then
		usage
	fi

	for sv_dirs in ${SV_DIRS}; do
	    src_dir=${sv_dirs%=*}
	    dst_dir=${sv_dirs#*=}
	    if [ -d ${src_dir}/$TARGET ]; then
		exec ln -sv ${src_dir}/$TARGET ${dst_dir}
	    fi
	done

	echo "Unknown service: $TARGET"
	exit 1
	;;
disable)
	if [ -z "$TARGET" ]; then
		usage
	fi

	for sv_dirs in ${SV_DIRS}; do
	    src_dir=${sv_dirs%=*}
	    dst_dir=${sv_dirs#*=}
	    if [ -L ${dst_dir}/$TARGET ]; then
		exec rm -fv ${dst_dir}/$TARGET
	    fi
	done

	echo "Unknown service: $TARGET"
	exit 1
	;;
list)
	for sv_dirs in ${SV_DIRS}; do
	    src_dir=${sv_dirs%=*}
	    dst_dir=${sv_dirs#*=}

	    if [ -d ${src_dir} ]; then
		find ${src_dir} -maxdepth 1 -type d -exec basename \{\} \; | sort
	    fi
	done
	exit $?
	;;
status)
	if [ -z "$TARGET" -o "$TARGET" = "all" ]; then
	    for sv_dirs in ${SV_DIRS}; do
		src_dir=${sv_dirs%=*}
		dst_dir=${sv_dirs#*=}

		if [ -d ${dst_dir} ]; then
		    sv status ${dst_dir}/*
		fi
	    done
	    exit $?
	fi

	for sv_dirs in ${SV_DIRS}; do
	    src_dir=${sv_dirs%=*}
	    dst_dir=${sv_dirs#*=}

	    if [ -r ${dst_dir}/$TARGET ]; then
		exec sv status ${dst_dir}/$TARGET
	    fi
	done

	echo "Unknown service: $TARGET"
	exit 1
	;;
start|restart|stop)
	if [ -z "$TARGET" ]; then
		usage
	fi

	for sv_dirs in ${SV_DIRS}; do
	    src_dir=${sv_dirs%=*}
	    dst_dir=${sv_dirs#*=}

	    if [ -r ${dst_dir}/$TARGET ]; then
		exec sv $ACTION ${dst_dir}/$TARGET
	    fi
	done

	echo "Unknown service: $TARGET"
	exit 1
	;;
*)
	usage
	;;
esac
